// <auto-generated />
using System;
using Labb4MVCRazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb4MVCRazor.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240901094852_CreateDatabase4")]
    partial class CreateDatabase4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb4MVCRazor.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                            {
                                BookId = 1,
                                Author = "J.R.R. Tolkien",
                                PublicationYear = 1937,
                                Title = "The Hobbit"
                            },
                            new
                            {
                                BookId = 2,
                                Author = "George R.R. Martin",
                                PublicationYear = 1996,
                                Title = "A Game of Thrones"
                            },
                            new
                            {
                                BookId = 3,
                                Author = "Patrick Rothfuss",
                                PublicationYear = 2007,
                                Title = "The Name of the Wind"
                            },
                            new
                            {
                                BookId = 4,
                                Author = "Brandon Sanderson",
                                PublicationYear = 2006,
                                Title = "Mistborn: The Final Empire"
                            },
                            new
                            {
                                BookId = 5,
                                Author = "Scott Lynch",
                                PublicationYear = 2006,
                                Title = "The Lies of Locke Lamora"
                            });

                });

            modelBuilder.Entity("Labb4MVCRazor.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "moggewestin@hotmail.com",
                            Name = "Morgan Westin",
                            PhoneNumber = "07564321"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Jan_C@gmail.com",
                            Name = "Jan Carlsson",
                            PhoneNumber = "08549731"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "alexBentzon@gmail.com",
                            Name = "Alex Begntzon",
                            PhoneNumber = "04567785"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "JhoanF@hotmail.com",
                            Name = "Johan Fredriksson",
                            PhoneNumber = "03215786"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Frida.aronsson@gmail.com",
                            Name = "Frisa Aronsson",
                            PhoneNumber = "04567891"
                        });
                });

            modelBuilder.Entity("Labb4MVCRazor.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            LoanDate = new DateTime(2024, 09, 02, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true
                        },
                        new
                        {
                            LoanId = 2,
                            BookId = 2,
                            CustomerId = 2,
                            LoanDate = new DateTime(2024, 09, 01, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true
                        },
                        new
                        {
                            LoanId = 3,
                            BookId = 3,
                            CustomerId = 3,
                            LoanDate = new DateTime(2024, 09, 07, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false
                        },
                        new
                        {
                            LoanId = 4,
                            BookId = 4,
                            CustomerId = 4,
                            LoanDate = new DateTime(2024, 09, 09, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true
                        },
                        new
                        {
                            LoanId = 5,
                            BookId = 5,
                            CustomerId = 5,
                            LoanDate = new DateTime(2024, 09, 04, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true
                        });
                });

            modelBuilder.Entity("Labb4MVCRazor.Models.Loan", b =>
                {
                    b.HasOne("Labb4MVCRazor.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb4MVCRazor.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
